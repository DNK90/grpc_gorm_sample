// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample/sample.proto

package sample

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyParam struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyParam) Reset()         { *m = EmptyParam{} }
func (m *EmptyParam) String() string { return proto.CompactTextString(m) }
func (*EmptyParam) ProtoMessage()    {}
func (*EmptyParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed182cfb5ecd7537, []int{0}
}

func (m *EmptyParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyParam.Unmarshal(m, b)
}
func (m *EmptyParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyParam.Marshal(b, m, deterministic)
}
func (m *EmptyParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyParam.Merge(m, src)
}
func (m *EmptyParam) XXX_Size() int {
	return xxx_messageInfo_EmptyParam.Size(m)
}
func (m *EmptyParam) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyParam.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyParam proto.InternalMessageInfo

type Item struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed182cfb5ecd7537, []int{1}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Item) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Item) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyParam)(nil), "sample.EmptyParam")
	proto.RegisterType((*Item)(nil), "sample.Item")
}

func init() {
	proto.RegisterFile("sample/sample.proto", fileDescriptor_ed182cfb5ecd7537)
}

var fileDescriptor_ed182cfb5ecd7537 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0xd9, 0x58, 0x6a, 0xbb, 0x6d, 0x45, 0x56, 0x90, 0x18, 0x04, 0x4b, 0x4e, 0x52, 0x68,
	0xd6, 0x8f, 0x5b, 0xc0, 0x83, 0x82, 0x48, 0xc1, 0x83, 0x58, 0x4f, 0xde, 0x36, 0xc9, 0x36, 0x2e,
	0x64, 0x77, 0x96, 0x64, 0x5b, 0xf4, 0xea, 0x2b, 0xf8, 0x34, 0xfa, 0x1a, 0xbe, 0x80, 0x07, 0x1f,
	0x44, 0x32, 0x49, 0xf1, 0xe3, 0xe6, 0x69, 0xf7, 0x37, 0x33, 0xff, 0xff, 0xce, 0xcc, 0xd2, 0x9d,
	0x4a, 0x68, 0x5b, 0x48, 0xde, 0x1c, 0x91, 0x2d, 0xc1, 0x01, 0xeb, 0x36, 0x14, 0xc4, 0xb9, 0x72,
	0x0f, 0xcb, 0x24, 0x4a, 0x41, 0x73, 0x65, 0x16, 0x90, 0x14, 0xf0, 0x08, 0x56, 0x1a, 0x8e, 0x65,
	0xe9, 0x34, 0x97, 0x66, 0x9a, 0x43, 0xa9, 0x39, 0x58, 0xa7, 0xc0, 0x54, 0xbc, 0x86, 0xc6, 0x23,
	0xd8, 0xcf, 0x01, 0xf2, 0x42, 0x72, 0x61, 0x15, 0x17, 0xc6, 0x80, 0x13, 0x58, 0xd2, 0x66, 0x0f,
	0xda, 0x2c, 0x52, 0xb2, 0x5c, 0x70, 0xa7, 0xb4, 0xac, 0x9c, 0xd0, 0xb6, 0x29, 0x08, 0x87, 0x94,
	0x5e, 0x6a, 0xeb, 0x9e, 0x6e, 0x44, 0x29, 0x74, 0x78, 0x47, 0x3b, 0x33, 0x27, 0x35, 0xdb, 0xa2,
	0x9e, 0xca, 0x7c, 0x32, 0x26, 0x87, 0xfd, 0x5b, 0x4f, 0x65, 0x8c, 0xd1, 0x8e, 0x11, 0x5a, 0xfa,
	0x1e, 0x46, 0xf0, 0xce, 0xc6, 0x74, 0x90, 0xc9, 0x2a, 0x2d, 0x15, 0xf6, 0xe4, 0x6f, 0x60, 0xea,
	0x67, 0x28, 0xee, 0xbe, 0xbd, 0xee, 0x79, 0x3d, 0x72, 0xf2, 0x41, 0xe8, 0x68, 0x8e, 0x93, 0xce,
	0x65, 0xb9, 0x52, 0xa9, 0x64, 0x67, 0x74, 0xf3, 0x4a, 0x3a, 0x7c, 0x6a, 0x18, 0xb5, 0x2b, 0xa9,
	0x29, 0xf8, 0x45, 0xe1, 0xee, 0xf3, 0xfb, 0xe7, 0x8b, 0xb7, 0x1d, 0x0e, 0xf8, 0xea, 0x98, 0xe7,
	0x8d, 0x20, 0x26, 0x13, 0x36, 0xa3, 0xfd, 0x6b, 0x55, 0x21, 0x56, 0x8c, 0xad, 0x25, 0xdf, 0x73,
	0xfc, 0xb1, 0xf1, 0xd1, 0x86, 0x85, 0xa3, 0xda, 0xa6, 0x58, 0x0b, 0x63, 0x32, 0x39, 0x22, 0x75,
	0x27, 0xe7, 0x59, 0xf6, 0xbf, 0x4e, 0x44, 0x23, 0x88, 0xc9, 0x24, 0x68, 0x47, 0xbc, 0xe8, 0xdd,
	0xb7, 0x7f, 0x99, 0x74, 0x71, 0xaf, 0xa7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0x4b, 0x9c,
	0xef, 0xf1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SampleServiceClient is the client API for SampleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SampleServiceClient interface {
	GetItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Item, error)
	ListItems(ctx context.Context, in *EmptyParam, opts ...grpc.CallOption) (SampleService_ListItemsClient, error)
	AddItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Item, error)
}

type sampleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSampleServiceClient(cc grpc.ClientConnInterface) SampleServiceClient {
	return &sampleServiceClient{cc}
}

func (c *sampleServiceClient) GetItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/sample.SampleService/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sampleServiceClient) ListItems(ctx context.Context, in *EmptyParam, opts ...grpc.CallOption) (SampleService_ListItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SampleService_serviceDesc.Streams[0], "/sample.SampleService/ListItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &sampleServiceListItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SampleService_ListItemsClient interface {
	Recv() (*Item, error)
	grpc.ClientStream
}

type sampleServiceListItemsClient struct {
	grpc.ClientStream
}

func (x *sampleServiceListItemsClient) Recv() (*Item, error) {
	m := new(Item)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sampleServiceClient) AddItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/sample.SampleService/AddItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SampleServiceServer is the server API for SampleService service.
type SampleServiceServer interface {
	GetItem(context.Context, *Item) (*Item, error)
	ListItems(*EmptyParam, SampleService_ListItemsServer) error
	AddItem(context.Context, *Item) (*Item, error)
}

// UnimplementedSampleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSampleServiceServer struct {
}

func (*UnimplementedSampleServiceServer) GetItem(ctx context.Context, req *Item) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (*UnimplementedSampleServiceServer) ListItems(req *EmptyParam, srv SampleService_ListItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListItems not implemented")
}
func (*UnimplementedSampleServiceServer) AddItem(ctx context.Context, req *Item) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddItem not implemented")
}

func RegisterSampleServiceServer(s *grpc.Server, srv SampleServiceServer) {
	s.RegisterService(&_SampleService_serviceDesc, srv)
}

func _SampleService_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SampleServiceServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sample.SampleService/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SampleServiceServer).GetItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _SampleService_ListItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyParam)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SampleServiceServer).ListItems(m, &sampleServiceListItemsServer{stream})
}

type SampleService_ListItemsServer interface {
	Send(*Item) error
	grpc.ServerStream
}

type sampleServiceListItemsServer struct {
	grpc.ServerStream
}

func (x *sampleServiceListItemsServer) Send(m *Item) error {
	return x.ServerStream.SendMsg(m)
}

func _SampleService_AddItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SampleServiceServer).AddItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sample.SampleService/AddItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SampleServiceServer).AddItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

var _SampleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sample.SampleService",
	HandlerType: (*SampleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItem",
			Handler:    _SampleService_GetItem_Handler,
		},
		{
			MethodName: "AddItem",
			Handler:    _SampleService_AddItem_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListItems",
			Handler:       _SampleService_ListItems_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sample/sample.proto",
}
